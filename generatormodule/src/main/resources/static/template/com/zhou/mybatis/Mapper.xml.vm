<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${mapperP}.${className}Mapper">
    <resultMap id="BaseResultMap" type="${entityP}.${className}">
    #foreach($column in $columnFieldmap.entrySet())
        #if(${column.key} =='ID')
    <id column="${column.key}"  property="${column.value.split("[,]")[0]}" />
        #end
        #if(${column.key} !='ID')
    <result column="${column.key}"  property="${column.value.split("[,]")[0]}" />
        #end
    #end
    </resultMap>
    <sql id="Base_Column_List">
    #set($fun=0)
    #foreach($column in $columnFieldmap.entrySet())
        #set($f=$columnFieldmap.size() - 1)
        ${column.key}
        #set($fun = $fun + 1)
        #if($fun <= $f)
          ,
        #end

    #end
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from ${tableName}
        where
    #foreach($column in $columnFieldmap.entrySet())
    #if(${column.key} =='ID')
        ${column.key} = #{${column.value.split("[,]")[0]}}
    #end
    #end
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ${tableName}
        where
      #foreach($column in $columnFieldmap.entrySet())
        #if(${column.key} =='ID')
            ${column.key} = #{${column.value.split("[,]")[0]}}
        #end
        #end
</delete>

    <insert id="insert" parameterType="${entityP}.${className}">
        insert into ${tableName} (
    #set($fun=0)
    #foreach($column in $columnFieldmap.entrySet())
        #set($f=$columnFieldmap.size() - 1)
        ${column.key}
        #set($fun = $fun + 1)
        #if($fun <= $f)
          ,
        #end
    #end
        )
        values (
        #set($fun2=0)
    #foreach($column in $columnFieldmap.entrySet())
        #set($f2=$columnFieldmap.size() - 1)
        #{${column.value.split("[,]")[0]}
        #set($fun2 = $fun2 + 1)
        #if($fun2 <= $f2)
          ,
        #end
    #end
        )
    </insert>

    <insert id="insertSelective" parameterType="${entityP}.${className}">
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columnFieldmap.entrySet())
                <if test="$column.value.split("[,]")[0] !=null">
                    ${column.key},
                </if>
            #end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #foreach($f in $fieldList)
                <if test="${f} !=null">
                    #{${f}},
                </if>
            #end
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="${entityP}.${className}">
        update ${tableName}
        <trim prefix="set" suffixOverrides="," >
        #foreach($column in $columnFieldmap.entrySet())
            #if(${column.key} !='ID')
            <if test="$column.value.split("[,]")[0] !=null ">
                ${column.key}=#{${column.value.split("[,]")[0]}},
            </if>
            #end
        #end
        </trim>
        <where>
            #foreach($column in $columnFieldmap.entrySet())
                #if(${column.key} =='ID')
            <if test="$column.value.split("[,]")[0] !=null">
               and ${column.key}=#{${column.value.split("[,]")[0]}}
            </if>
                #end
            #end
        </where>
    </update>

    <update id="updateByPrimaryKey" parameterType="${entityP}.${className}">
        update ${tableName}
        <trim prefix="set" suffixOverrides="," >
            #foreach($column in $columnFieldmap.entrySet())
                #if(${column.key} !='ID')
                <if test="$column.value.split("[,]")[0] !=null ">
                    ${column.key}=#{${column.value.split("[,]")[0]}},
                </if>
                #end
            #end
        </trim>
        <where>
            #foreach($column in $columnFieldmap.entrySet())
                #set($f = $column.value.split("[,]")[1])
                #if($f == 'CHAR' || $f == 'VARCHAR2' || $f == 'VARCHAR')
                <if test="$column.value.split("[,]")[0] !=null and $column.value.split("[,]")[0] !=''">
                #elseif($f == 'DATE' || $f == 'TIMESTAMP' || $f == 'NUMBER'|| $f == 'FLOAT' || $f == 'BLOB' || $f == 'RAW')
                <if test="$column.value.split("[,]")[0] !=null">
                #else
                <if test="$column.value.split("[,]")[0] !=null and $column.value.split("[,]")[0] !=''">
                #end
                    and ${column.key}=#{${column.value.split("[,]")[0]}}
                </if>
            #end
        </where>
    </update>

    <select id="select${className}All" parameterType="${entityP}.${className}" resultMap="BaseResultMap">
        SELECT  <include refid="Base_Column_List" />
        from ${tableName}
        <where>
        #foreach($column in $columnFieldmap.entrySet())
            #set($f = $column.value.split("[,]")[1])
            #if($f == 'CHAR' || $f == 'VARCHAR2' || $f == 'VARCHAR')
            <if test="$column.value.split("[,]")[0] !=null and $column.value.split("[,]")[0] !=''">
            #elseif($f == 'DATE' || $f == 'TIMESTAMP' || $f == 'NUMBER'|| $f == 'FLOAT' || $f == 'BLOB' || $f == 'RAW')
            <if test="$column.value.split("[,]")[0] !=null">
            #else
            <if test="$column.value.split("[,]")[0] !=null and $column.value.split("[,]")[0] !=''">
            #end
                and ${column.key}=#{${column.value.split("[,]")[0]}}
            </if>
        #end
        </where>
    </select>

    <select id="select${className}byCondition" parameterType="${entityP}.${className}" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from ${tableName}
        <where>
            #foreach($column in $columnFieldmap.entrySet())
                #set($f = $column.value.split("[,]")[1])
                #if($f == 'CHAR' || $f == 'VARCHAR2' || $f == 'VARCHAR')
                <if test="$column.value.split("[,]")[0] !=null and $column.value.split("[,]")[0] !=''">
                #elseif($f == 'DATE' || $f == 'TIMESTAMP' || $f == 'NUMBER'|| $f == 'FLOAT' || $f == 'BLOB' || $f == 'RAW')
                <if test="$column.value.split("[,]")[0] !=null">
                #else
                <if test="$column.value.split("[,]")[0] !=null and $column.value.split("[,]")[0] !=''">
                #end
                    and ${column.key}=#{${column.value.split("[,]")[0]}}
                </if>
            #end
        </where>
    </select>
</mapper>