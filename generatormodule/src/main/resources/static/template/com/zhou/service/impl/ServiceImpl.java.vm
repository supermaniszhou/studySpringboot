package ${serviceImplP};

import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import ${entityP}.${className};
import ${mapperP}.${className}Mapper;
import ${serviceP}.${className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class ${className}ServiceImpl implements ${className}Service {
    @Autowired
    private ${className}Mapper mapper;

    @Override
    public int deleteByPrimaryKey(Long id) {
        return mapper.deleteByPrimaryKey(id);
    }

    @Override
    public int insert(${className} ${className.substring(0,1).toLowerCase()}${className.substring(1)}) {
        return mapper.insert(${className.substring(0,1).toLowerCase()}${className.substring(1)});
    }

    @Override
    public int insertSelective(${className} ${className.substring(0,1).toLowerCase()}${className.substring(1)}) {
        return mapper.insertSelective(${className.substring(0,1).toLowerCase()}${className.substring(1)});
    }

    @Override
    public ${className} selectByPrimaryKey(Long id) {
        return mapper.selectByPrimaryKey(id);
    }

    @Override
    public int updateByPrimaryKeySelective(${className} ${className.substring(0,1).toLowerCase()}${className.substring(1)}) {
        return mapper.updateByPrimaryKeySelective(${className.substring(0,1).toLowerCase()}${className.substring(1)});
    }

    @Override
    public int updateByPrimaryKey(${className} ${className.substring(0,1).toLowerCase()}${className.substring(1)}) {
        return mapper.updateByPrimaryKey(${className.substring(0,1).toLowerCase()}${className.substring(1)});
    }

    @Override
    public Page<${className}> selectPageList(${className} ${className.substring(0,1).toLowerCase()}${className.substring(1)}, int page, int pagesize) {
        PageHelper.startPage(page, pagesize);
        return mapper.selectPageList(${className.substring(0,1).toLowerCase()}${className.substring(1)});
    }

    @Override
    public ${className} selectBySysUser(${className} ${className.substring(0,1).toLowerCase()}${className.substring(1)}) {
        return mapper.selectObject(${className.substring(0,1).toLowerCase()}${className.substring(1)});
    }
}
